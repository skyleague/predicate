/**
 * Generated by @skyleague/therefore@v1.0.0-local
 * Do not manually touch this
 */
/* eslint-disable */
import type { ValidateFunction } from 'ajv'
import { ValidationError } from 'ajv'

export interface Person {
    firstName: string
    lastName: string
    birthDate: string
    age: number
}

export const Person = {
    validate: (await import('./schemas/person.schema.js')).validate as ValidateFunction<Person>,
    get schema() {
        return Person.validate.schema
    },
    get errors() {
        return Person.validate.errors ?? undefined
    },
    is: (o: unknown): o is Person => Person.validate(o) === true,
    assert: (o: unknown) => {
        if (!Person.validate(o)) {
            throw new ValidationError(Person.errors ?? [])
        }
    },
} as const
